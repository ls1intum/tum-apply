name: Check Server Startup

on:
  pull_request:
    branches: [main]
  workflow_dispatch:

jobs:
  check-server-start:
    name: Ensure Server Starts Successfully
    runs-on: ubuntu-latest
    timeout-minutes: 5
    environment: test-server

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Start Spring Boot and check log
        env:
          KEYCLOAK_URL: ${{ vars.KEYCLOAK_URL }}
          KEYCLOAK_REALM: ${{ vars.KEYCLOAK_REALM }}
          KEYCLOAK_CLIENT_ID: ${{ vars.KEYCLOAK_CLIENT_ID }}
          KEYCLOAK_ADMIN: ${{ vars.KEYCLOAK_ADMIN }}
          KEYCLOAK_ADMIN_PASSWORD: ${{ secrets.KEYCLOAK_ADMIN_PASSWORD }}
          KEYCLOAK_ENABLE_LOGGING: ${{ vars.KEYCLOAK_ENABLE_LOGGING }}
          MYSQL_DATABASE: ${{ vars.MYSQL_DATABASE }}
          MYSQL_ROOT_PASSWORD: ${{ secrets.MYSQL_ROOT_PASSWORD }}
          SPRING_DATASOURCE_URL: ${{ vars.SPRING_DATASOURCE_URL }}
          SPRING_DATASOURCE_USERNAME: ${{ vars.SPRING_DATASOURCE_USERNAME }}
          SPRING_DATASOURCE_PASSWORD: ${{ secrets.SPRING_DATASOURCE_PASSWORD }}
          SPRING_LIQUIBASE_URL: ${{ vars.SPRING_LIQUIBASE_URL }}
          SPRING_PROFILES_ACTIVE: ${{ vars.SPRING_PROFILES_ACTIVE }}
        run: |
          ./gradlew bootRun > boot.log 2>&1 & SERVER_PID=$!

          # Wait for a few seconds to let server start
          sleep 240

          # Kill the process to avoid timeout
          kill $SERVER_PID || true

          # Look for Spring Boot banner
          if grep -q "Application 'TUMApply' is running!" boot.log; then
            echo "✅ Spring Boot started successfully."
          else
            echo "❌ Server did not start successfully!"
            cat boot.log
            exit 1
          fi
