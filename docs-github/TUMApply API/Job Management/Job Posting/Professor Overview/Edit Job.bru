meta {
  name: Edit Job
  type: http
  seq: 2
}

put {
  url: {{baseUrl}}/jobs/jobform/:jobid
  body: json
  auth: oauth2
}

params:path {
  jobid: 
}

auth:oauth2 {
  grant_type: authorization_code
  callback_url: {{redirectUri}}
  authorization_url: {{baseKeycloakUrl}}/realms/{{realm}}/protocol/openid-connect/auth
  access_token_url: {{baseKeycloakUrl}}/realms/{{realm}}/protocol/openid-connect/token
  refresh_token_url: 
  client_id: {{clientId}}
  client_secret: 
  scope: openid
  state: {{$guid}}
  pkce: true
  credentials_placement: basic_auth_header
  credentials_id: 
  token_placement: header
  token_header_prefix: 
  auto_fetch_token: true
  auto_refresh_token: false
}

body:json {
  {
    "professorId": "6e8a48fa-0e8e-4e17-bc0f-8e7389e4f1ab",
    "fieldOfStudies": "Computer Science, Artificial Intelligence",
    "researchArea": "Machine Learning and Computer Vision",
    "title": "PhD Position in Deep Learning for Medical Image Analysis",
    "introduction": "Join our interdisciplinary team at TUM to develop cutting-edge AI models for healthcare.",
    "aboutUs": "We are part of the Chair of Artificial Intelligence in Medicine, focused on impactful AI research.",
    "tasks": "You will work on deep learning architectures for detecting anomalies in MRI and CT scans.",
    "qualifications": "Master's degree in Computer Science, Engineering, or a related field. Strong programming skills.",
    "weOffer": "Collaboration with leading hospitals, competitive salary, and opportunity to publish in top conferences.",
    "applicationRequirements": "CV, transcripts, a letter of motivation, and two reference letters.",
    "dataProtectionInformation": "Your data will be stored securely in accordance with GDPR regulations.",
    "contact": "Dr. Stephan Krusche",
    "state": "OPEN",
    "startDate": "2025-10-01T00:00:00Z",
    "applicationDeadline": "2025-06-30T23:59:59Z"
  }
}

docs {
  ### Update Job Posting
  
  This endpoint is used to update an existing job posting by providing the `jobId` in the URL path. The request should be sent as an HTTP PUT to `{{baseUrl}}/jobs/jobform/{jobId}`.
  
  #### Request Body
  
  The request should include the following parameters in the raw request body:
  
  - `professorId`: (string) The unique identifier of the professor associated with the job posting.
      
  - `fieldOfStudies`: (string) The field of studies related to the job posting.
      
  - `researchArea`: (string) The specific research area for the job posting.
      
  - `title`: (string) The title of the job posting.
      
  - `introduction`: (string) Introduction to the job posting.
      
  - `aboutUs`: (string) Information about the organization or department.
      
  - `tasks`: (string) Description of the tasks involved in the job.
      
  - `qualifications`: (string) Required qualifications for the job.
      
  - `weOffer`: (string) Details of what is offered as part of the job.
      
  - `applicationRequirements`: (string) Requirements for job application including documents.
      
  - `dataProtectionInformation`: (string) Information about the data protection and privacy.
      
  - `contact`: (string) Contact person for the job posting.
      
  - `state`: (string) Current state of the job posting.
      
  - `startDate`: (string) Start date of the job.
      
  - `applicationDeadline`: (string) Deadline for submitting the job application.
      
  
  #### Response
  
  The response to the request will contain the updated job posting details if the operation is successful.
}
